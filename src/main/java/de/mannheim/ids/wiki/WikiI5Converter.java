package de.mannheim.ids.wiki;

import java.io.IOException;
import java.sql.SQLException;

import org.apache.commons.cli.BasicParser;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;

/**
 * This is the main class for converting the XML-ized Wikipages to I5.
 * 
 * It requires the following data:
 * <ul>
 * <li>WikiXML files, which are outputs of the WikiXMLConverter, e.g. in
 * <code>wikixml-de/article</code> folder.</li>
 * <li>An index of all the WikiXML files, generated by WikiXMLCorpusIndexer.sh.
 * To generate the index, run WikiXMLCorpusIndexer.sh on a terminal in this
 * format:
 *  
 * ./WikiXMLCorpusIndexer.sh [pageType] [outputFile] [wikiXMLFolder] 
 * Example: ./WikiXMLCorpusIndexer.sh article article-index.xml wikixml-de/article
 *  
 * </li>
 * <li>A list of inflectives (only provided for German)</li>
 * <li>A database containing a language links table restored from the wiki
 * language link sql dump, for instance, dewiki-20150430-langlinks.sql.</li>
 * </ul>
 *
 *<p>
 * It takes a properties file to configure the parameters needed by the program.
 * </p>
 * 
 * @see {@link Configuration}
 * 
 * @author margaretha
 */

public class WikiI5Converter {

	private static Options options;

	public WikiI5Converter() {		
		options = new Options();
		options.addOption("prop", true, "Properties filename");
	}

	public static void main(String[] args) throws ParseException, IOException,
			I5Exception, SQLException {
		WikiI5Converter converter = new WikiI5Converter();
		Configuration config = converter.createConfig(args);
		WikiI5Processor processor = new WikiI5Processor(config);
		processor.run();
	}

	private Configuration createConfig(String[] args) throws ParseException,
			IOException {
		CommandLineParser parser = new BasicParser();
		CommandLine cmd = parser.parse(options, args);

		String propertiesFilename = cmd.getOptionValue("prop");
		if (propertiesFilename != null) {
			return new Configuration(propertiesFilename);
		}
		else {
			throw new IllegalArgumentException("Properties filename is missing.");
		}
	}

}
